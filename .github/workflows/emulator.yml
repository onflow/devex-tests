name: Build Flow Emulator with temporary dependencies

on:
  workflow_dispatch:
    inputs:
      CADENCE_HASH:
        description: "Cadence repo commit hash"
        type: string
      FLOW_GO_HASH:
        description: "Flow Go repo commit hash"
        type: string
      FLOW_GO_SDK_HASH:
        description: "Flow Go SDK repo commit hash"
        type: string
      FLOW_EMULATOR_HASH:
        description: "Flow Emulator repo commit hash"
        type: string
      FLOW_CLI_HASH:
        description: "Flow CLI repo commit hash"
        type: string

jobs:
  build-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    # container: cypress/browsers:node16.14.2-slim-chrome103-ff102 #use arm64 arch on Apple M1 chips when running locally
    steps:
      - name: Save current timestamp to env var
        run: |
            echo "TIMESTAMP=$(date)" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with: 
          path: devex-tests
      
      - name: Find Latest Tag for Cadence
        if: github.event.inputs.CADENCE_HASH == ''
        uses: oprypin/find-latest-tag@v1.1.1
        with:
          repository: onflow/cadence  # The repository to scan.
          releases-only: false  
        id: cadence  # The step ID to refer to later.
      - run: |
          echo "CADENCE_HASH=${{ steps.cadence.outputs.tag || github.event.inputs.CADENCE_HASH }}" >> $GITHUB_ENV
      - run: |
          echo "Cadence is at version ${{ env.CADENCE_HASH }}"

      - name: Find Latest Tag for flow-go
        if: github.event.inputs.FLOW_GO_HASH == ''
        uses: oprypin/find-latest-tag@v1.1.1
        with:
          repository: onflow/flow-go  
          releases-only: false  
        id: flow-go  # The step ID to refer to later.
      - run: |
          echo "FLOW_GO_HASH=${{ steps.flow-go.outputs.tag || github.event.inputs.FLOW_GO_HASH }}" >> $GITHUB_ENV
      - run: |
          echo "flow-go is at version ${{ env.FLOW_GO_HASH }}"

      - name: Find Latest Tag for flow-emulator
        if: github.event.inputs.FLOW_EMULATOR_HASH == ''
        uses: oprypin/find-latest-tag@v1.1.1
        with:
          repository: onflow/flow-emulator  # The repository to scan.
          releases-only: false  
        id: emulator  # The step ID to refer to later.
      - run: |
          echo "FLOW_EMULATOR_HASH=${{ steps.emulator.outputs.tag || github.event.inputs.FLOW_EMULATOR_HASH }}" >> $GITHUB_ENV
      - run: |
          echo "flow-emulator is at version ${{ env.FLOW_EMULATOR_HASH }}"

      #########

      - name: Get cadence repo sources
        uses: actions/checkout@v3
        with:
          repository: onflow/cadence
          path: cadence
          ref: ${{ env.CADENCE_HASH }}

      - name: Get flow-go repo sources
        uses: actions/checkout@v3
        with:
          repository: onflow/flow-go
          path: flow-go
          ref: ${{ env.FLOW_GO_HASH }}

      - name: Get flow-go-sdk repo sources
        uses: actions/checkout@v3
        with:
          repository: onflow/flow-go-sdk
          path: flow-go-sdk
          ref: ${{ github.event.inputs.FLOW_GO_SDK_HASH }}

      - name: Get Emulator sources
        uses: actions/checkout@v3
        with:
          repository: onflow/flow-emulator
          path: flow-emulator
          ref: ${{ env.FLOW_EMULATOR_HASH }}

      - name: Get flow cli sources
        uses: actions/checkout@v3
        with:
          repository: onflow/flow-cli
          path: flow-cli
          ref: ${{ github.event.inputs.FLOW_CLI_HASH }}


      - run: exit 1
      ###

      - uses: actions/setup-go@v1
        with:
          go-version: '1.19'
      
      - name: Install build dependencies 
        run: |
          sudo apt-get update -y 
          sudo apt-get install build-essential zip cmake -y 

      ###

      - name: Replace imports with local sources in emulator project
        run: | 
          cd flow-emulator
          go mod edit -replace github.com/onflow/cadence=../cadence
          go mod edit -replace github.com/onflow/flow-go=../flow-go
          go mod edit -replace github.com/onflow/flow-go-sdk=../flow-go-sdk

      - name: Replace imports with local sources in flow-go project
        run: | 
          cd flow-go
          go mod edit -replace github.com/onflow/cadence=../cadence

      - name: Replace imports with local sources in flow-cli project
        run: | 
          cd flow-cli
          go mod edit -replace github.com/onflow/flow-emulator=../flow-emulator

      - name: Build flow-go
        run: |
          cd flow-go
          make install-tools
          go mod tidy
          go build -v --tags relic ./...
      # make generate


      - name: Build emulator
        run: |
          cd flow-emulator
          go mod tidy
          go build ./cmd/emulator

      - name: Build flow-cli
        run: |
          cd flow-cli
          go mod tidy
          make versioned-binaries

      - name: Copy flow binary
        run: cp flow-cli/cmd/flow/flow-x86_64-linux- /usr/local/bin/flow && ls /usr/local/bin/flow

      - name: Get Flow Version
        run: |
          echo Flow version:
          flow version

      - name: Upload flow-cli artifacts
        # if: ${{ env.ACTIONS_RUNTIME_TOKEN }}
        uses: actions/upload-artifact@v3
        with:
          name: flow-cli
          path: flow-cli/cmd/flow
  
      - name: Upload emulator artifacts
        uses: actions/upload-artifact@v3
        with:
          name: flow-emulator
          path: flow-emulator/emulator

      # - if: ${{ always() }}
      #   run: |
      #     echo "FLOW_CLI_HASH=${{ github.event.inputs.FLOW_CLI_HASH || 'master' }}" >> $GITHUB_ENV

      - name: Write result to CSV file
        if: ${{ always() }}
        uses: gr2m/write-csv-file-action@v1.x
        with:
          path: devex-tests/results.csv
          columns: timestamp,result,cadence version,flow-go version,emulator version,flow-cli version
          "timestamp": ${{ env.TIMESTAMP }} 
          "result": ${{ job.status }}
          "cadence version": ${{ env.CADENCE_HASH }}
          "flow-go version": ${{ env.FLOW_GO_HASH }}
          "emulator version": ${{ env.FLOW_EMULATOR_HASH }}
          "flow-cli version": ${{ github.event.inputs.FLOW_CLI_HASH || 'master' }}  

      - name: Push updated results.csv file back to main branch
        if: ${{ always() }}
        run: | 
          cd devex-tests
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add results.csv
          git commit -m "results.csv updated"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  
